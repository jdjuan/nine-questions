// Generated by Xata Codegen 0.22.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type { BaseClientOptions, SchemaInference, XataRecord } from "@xata.io/client";

const tables = [
  {
    name: "Answers",
    columns: [
      { name: "questionId", type: "string" },
      { name: "answerId", type: "string" },
      { name: "isCorrect", type: "bool" },
      { name: "createdAt", type: "datetime" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Answers = InferredTypes["Answers"];
export type AnswersRecord = Answers & XataRecord;

export type DatabaseSchema = {
  Answers: AnswersRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://Juan-Herrera-s-workspace-p9a35b.us-west-2.xata.sh/db/nine-questions",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
